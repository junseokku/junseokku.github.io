{"version":3,"file":"component---src-templates-post-template-tsx-d002095ee31a9868fb4f.js","mappings":"8NASA,IAiBMA,GAAoB,cAAH,mBAAG,CAAH,wFAKjBC,GAAmB,cAAH,mBAAG,CAAH,4FAMhBC,GAAe,cAAH,mBAAG,CAAH,+EAMZC,GAAwB,eAAH,mBAAG,CAAH,iEAK3B,EAvCmD,YAIhD,IAHCC,EAGD,EAHCA,MACAC,EAED,EAFCA,KACAC,EACD,EADCA,WAEA,OACI,QAACN,EAAD,MACI,QAACC,EAAD,MACI,QAACC,EAAD,KAAeE,IACf,QAACD,EAAD,KACKG,EADL,KACmBD,MCXnC,IASME,GAAmB,cAAH,mBAAG,CAAH,0HAUtB,EAnByD,YAAoB,IAARC,EAAQ,EAARA,KACjE,OACI,QAACD,EAAD,CACIE,UAAU,gBACVC,wBAAyB,CAAEC,OAAQH,MCc/C,IAAMI,GAAc,cAAH,mBAAG,CAAH,kFAkCjB,EA5B2D,YAMxD,QALCC,KACyBC,EAI1B,EAJKC,kBAAqBD,MACbE,EAGb,EAHKC,KAAQD,aAIZ,GADD,EADCE,SAAYC,KAORL,EAAM,GAJNM,MACIZ,EAFR,EAEQA,KAFR,IAGQa,YAAejB,EAHvB,EAGuBA,MAAgBC,GAHvC,EAG8BiB,QAH9B,EAGuCjB,MAAMC,EAH7C,EAG6CA,WAI7C,OACI,QAACiB,EAAA,EAAD,CACInB,MAAOY,EAAaZ,MACpBoB,YAAaR,EAAaQ,YAC1BC,IAAKT,EAAaU,UAElB,QAACd,EAAD,MACI,QAAC,EAAD,CAAUR,MAAOA,EAAOC,KAAMA,EAAMC,WAAYA,KAChD,QAAC,EAAD,CAAaE,KAAMA","sources":["webpack://gatsby-starter-default/./src/components/post/PostHead.tsx","webpack://gatsby-starter-default/./src/components/post/PostContent.tsx","webpack://gatsby-starter-default/./src/templates/post_template.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\n\ntype PostHeadProps = {\n    title: string;\n    date: string;\n    categories: string[];\n};\n\nconst PostHead: FunctionComponent<PostHeadProps> = function ({\n    title,\n    date,\n    categories,\n}) {\n    return (\n        <PostHeaderWrapper>\n            <TitleDateWrapper>\n                <TitleWrapper>{title}</TitleWrapper>\n                <CategoriesDateWrapper>\n                    {categories}, {date}\n                </CategoriesDateWrapper>\n            </TitleDateWrapper>\n        </PostHeaderWrapper>\n    );\n};\n\nconst PostHeaderWrapper = styled.div`\n    padding-bottom: 5px;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n`;\n\nconst TitleDateWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n`;\n\nconst TitleWrapper = styled.div`\n    font-size: 2rem;\n    font-weight: 600;\n    margin-bottom: 0.7rem;\n`;\n\nconst CategoriesDateWrapper = styled.span`\n    font-size: 1rem;\n    color: rgba(0, 0, 0, 0.5);\n`;\n\nexport default PostHead;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\nimport 'github-markdown-css/github-markdown-light.css';\n\ninterface PostContentProps {\n    html: string;\n}\n\nconst PostContent: FunctionComponent<PostContentProps> = function ({ html }) {\n    return (\n        <MarkdownRenderer\n            className=\"markdown-body\"\n            dangerouslySetInnerHTML={{ __html: html }}\n        />\n    );\n};\n\nconst MarkdownRenderer = styled.div`\n    // Renderer Style\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    margin: 0 auto;\n    padding: 50px 0;\n    word-break: break-all;\n`;\n\nexport default PostContent;\n","import React, { FunctionComponent } from 'react';\nimport { graphql } from 'gatsby';\nimport { PostPageItemType } from 'types/PostItem.types';\nimport Template from 'components/common/Template';\nimport PostHead from 'components/post/PostHead';\nimport PostContent from 'components/post/PostContent';\nimport styled from '@emotion/styled';\n\ntype PostTemplateProps = {\n    data: {\n        allMarkdownRemark: {\n            edges: PostPageItemType[];\n        };\n        site: {\n            siteMetadata: {\n                title: string;\n                description: string;\n                siteUrl: string;\n            };\n        };\n    };\n    location: {\n        href: string;\n    };\n};\n\nconst PostWrapper = styled.div`\n    padding: 50px 30px 0;\n    display: flex;\n    flex-direction: column;\n`;\n\nconst PostTemplate: FunctionComponent<PostTemplateProps> = function ({\n    data: {\n        allMarkdownRemark: { edges },\n        site: { siteMetadata },\n    },\n    location: { href },\n}) {\n    const {\n        node: {\n            html,\n            frontmatter: { title, summary, date, categories },\n        },\n    } = edges[0];\n\n    return (\n        <Template\n            title={siteMetadata.title}\n            description={siteMetadata.description}\n            url={siteMetadata.siteUrl}\n        >\n            <PostWrapper>\n                <PostHead title={title} date={date} categories={categories} />\n                <PostContent html={html} />\n            </PostWrapper>\n        </Template>\n    );\n};\n\nexport default PostTemplate;\n\nexport const queryMarkdownDataBySlug = graphql`\n    query queryMarkdownDataBySlug($slug: String) {\n        allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\n            edges {\n                node {\n                    html\n                    frontmatter {\n                        title\n                        summary\n                        date(formatString: \"YYYY.MM.DD.\")\n                        categories\n                    }\n                }\n            }\n        }\n        site {\n            siteMetadata {\n                title\n                description\n                siteUrl\n            }\n        }\n    }\n`;\n"],"names":["PostHeaderWrapper","TitleDateWrapper","TitleWrapper","CategoriesDateWrapper","title","date","categories","MarkdownRenderer","html","className","dangerouslySetInnerHTML","__html","PostWrapper","data","edges","allMarkdownRemark","siteMetadata","site","location","href","node","frontmatter","summary","Template","description","url","siteUrl"],"sourceRoot":""}