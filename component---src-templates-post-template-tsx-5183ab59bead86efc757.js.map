{"version":3,"file":"component---src-templates-post-template-tsx-5183ab59bead86efc757.js","mappings":"8NASA,IAAMA,GAAmB,cAAH,mBAAG,CAAH,4FAMhBC,GAAe,cAAH,mBAAG,CAAH,8EAMZC,GAAwB,eAAH,mBAAG,CAAH,iEAsB3B,EAjBmD,YAIhD,IAHCC,EAGD,EAHCA,MACAC,EAED,EAFCA,KACAC,EACD,EADCA,WAEA,OACI,oBACI,QAACL,EAAD,MACI,QAACC,EAAD,KAAeE,IACf,QAACD,EAAD,KACKG,EADL,KACmBD,MC7BnC,IAAME,GAAmB,cAAH,mBAAG,CAAH,62BAyHtB,EAJyD,YAAoB,IAARC,EAAQ,EAARA,KACjE,OAAO,QAACD,EAAD,CAAkBE,wBAAyB,CAAEC,OAAQF,MCnGhE,IAAMG,GAAc,cAAH,mBAAG,CAAH,mGAQXC,GAAU,cAAH,mBAAG,CAAH,sDAwCb,EAnC2D,YAMxD,QALCC,KACyBC,EAI1B,EAJKC,kBAAqBD,MACbE,EAGb,EAHKC,KAAQD,aAIZ,GADD,EADCE,SAAYC,KAORL,EAAM,GAJNM,MACIZ,EAFR,EAEQA,KAFR,IAGQa,YAAejB,EAHvB,EAGuBA,MAAgBC,GAHvC,EAG8BiB,QAH9B,EAGuCjB,MAAMC,EAH7C,EAG6CA,WAI7C,OACI,QAACiB,EAAA,EAAD,CACInB,MAAOY,EAAaZ,MACpBoB,YAAaR,EAAaQ,YAC1BC,IAAKT,EAAaU,UAElB,QAACf,EAAD,MACI,QAACC,EAAD,MACI,QAAC,EAAD,CACIR,MAAOA,EACPC,KAAMA,EACNC,WAAYA,KAEhB,QAAC,EAAD,CAAaE,KAAMA","sources":["webpack://gatsby-starter-default/./src/components/post/PostHead.tsx","webpack://gatsby-starter-default/./src/components/post/PostContent.tsx","webpack://gatsby-starter-default/./src/templates/post_template.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\n\ntype PostHeadProps = {\n    title: string;\n    date: string;\n    categories: string[];\n};\n\nconst TitleDateWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n`;\n\nconst TitleWrapper = styled.div`\n    font-size: 30px;\n    font-weight: 700;\n    margin-bottom: 0.7rem;\n`;\n\nconst CategoriesDateWrapper = styled.span`\n    font-size: 1rem;\n    color: rgba(0, 0, 0, 0.5);\n`;\n\nconst PostHead: FunctionComponent<PostHeadProps> = function ({\n    title,\n    date,\n    categories,\n}) {\n    return (\n        <div>\n            <TitleDateWrapper>\n                <TitleWrapper>{title}</TitleWrapper>\n                <CategoriesDateWrapper>\n                    {categories}, {date}\n                </CategoriesDateWrapper>\n            </TitleDateWrapper>\n        </div>\n    );\n};\n\nexport default PostHead;\n","import React, { FunctionComponent } from 'react';\nimport styled from '@emotion/styled';\n\ninterface PostContentProps {\n    html: string;\n}\n\nconst MarkdownRenderer = styled.div`\n    // Renderer Style\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    margin: 0 auto;\n    padding: 50px 0;\n    word-break: break-all;\n\n    // Markdown Style\n    line-height: 1.8;\n    font-size: 16px;\n    font-weight: 400;\n\n    // Apply Padding Attribute to All Elements\n    p {\n        padding: 3px 0;\n    }\n\n    // Adjust Heading Element Style\n    h1,\n    h2,\n    h3 {\n        font-weight: 700;\n        /* margin-bottom: 5px; */\n    }\n\n    hr + h1,\n    hr + h2,\n    hr + h3 {\n        margin-top: 0;\n    }\n\n    h1 {\n        font-size: 30px;\n    }\n\n    h2 {\n        font-size: 25px;\n    }\n\n    h3 {\n        font-size: 20px;\n    }\n\n    // Adjust Quotation Element Style\n    blockquote {\n        margin: 30px 0;\n        padding: 5px 15px;\n        border-left: 2px solid #000000;\n        font-weight: 600;\n    }\n\n    // Adjust List Element Style\n    ol,\n    ul {\n        margin-left: 20px;\n        padding: 5px;\n    }\n\n    // Adjust Horizontal Rule style\n    hr {\n        margin: 1rem 0;\n    }\n\n    // Adjust Link Element Style\n    a {\n        color: #4263eb;\n        text-decoration: underline;\n    }\n\n    // Adjust Code Style\n    pre[class*='language-'] {\n        margin: 30px 0;\n        padding: 15px;\n        font-size: 15px;\n\n        ::-webkit-scrollbar-thumb {\n            background: rgba(255, 255, 255, 0.5);\n            border-radius: 3px;\n        }\n    }\n\n    code[class*='language-'],\n    pre[class*='language-'] {\n        tab-size: 2;\n    }\n\n    // Markdown Responsive Design\n    @media (max-width: 1024px) {\n        width: 100%;\n        padding: 80px 20px;\n        line-height: 1.6;\n        font-size: 14px;\n\n        h1 {\n            font-size: 23px;\n        }\n\n        h2 {\n            font-size: 20px;\n        }\n\n        h3 {\n            font-size: 17px;\n        }\n\n        img {\n            width: 100%;\n        }\n\n        hr {\n            margin: 50px 0;\n        }\n    }\n`;\n\nconst PostContent: FunctionComponent<PostContentProps> = function ({ html }) {\n    return <MarkdownRenderer dangerouslySetInnerHTML={{ __html: html }} />;\n};\n\nexport default PostContent;\n","import React, { FunctionComponent } from 'react';\nimport { graphql } from 'gatsby';\nimport { PostPageItemType } from 'types/PostItem.types';\nimport Template from 'components/common/Template';\nimport PostHead from 'components/post/PostHead';\nimport PostContent from 'components/post/PostContent';\nimport styled from '@emotion/styled';\n\ntype PostTemplateProps = {\n    data: {\n        allMarkdownRemark: {\n            edges: PostPageItemType[];\n        };\n        site: {\n            siteMetadata: {\n                title: string;\n                description: string;\n                siteUrl: string;\n            };\n        };\n    };\n    location: {\n        href: string;\n    };\n};\n\nconst PostWrapper = styled.div`\n    width: 1024px;\n    height: auto;\n    margin: 0px auto;\n    margin-top: 1.5rem;\n    display: flex;\n`;\n\nconst Content = styled.div`\n    width: 768px;\n    margin: 0px 10px;\n`;\n\nconst PostTemplate: FunctionComponent<PostTemplateProps> = function ({\n    data: {\n        allMarkdownRemark: { edges },\n        site: { siteMetadata },\n    },\n    location: { href },\n}) {\n    const {\n        node: {\n            html,\n            frontmatter: { title, summary, date, categories },\n        },\n    } = edges[0];\n\n    return (\n        <Template\n            title={siteMetadata.title}\n            description={siteMetadata.description}\n            url={siteMetadata.siteUrl}\n        >\n            <PostWrapper>\n                <Content>\n                    <PostHead\n                        title={title}\n                        date={date}\n                        categories={categories}\n                    />\n                    <PostContent html={html} />\n                </Content>\n            </PostWrapper>\n            {/* <CommentWidget /> */}\n        </Template>\n    );\n};\n\nexport default PostTemplate;\n\nexport const queryMarkdownDataBySlug = graphql`\n    query queryMarkdownDataBySlug($slug: String) {\n        allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\n            edges {\n                node {\n                    html\n                    frontmatter {\n                        title\n                        summary\n                        date(formatString: \"YYYY.MM.DD.\")\n                        categories\n                    }\n                }\n            }\n        }\n        site {\n            siteMetadata {\n                title\n                description\n                siteUrl\n            }\n        }\n    }\n`;\n"],"names":["TitleDateWrapper","TitleWrapper","CategoriesDateWrapper","title","date","categories","MarkdownRenderer","html","dangerouslySetInnerHTML","__html","PostWrapper","Content","data","edges","allMarkdownRemark","siteMetadata","site","location","href","node","frontmatter","summary","Template","description","url","siteUrl"],"sourceRoot":""}